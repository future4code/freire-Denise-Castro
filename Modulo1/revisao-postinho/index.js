
// COMPARADORES
// Exerc√≠cio 1------------------------------------------------------------------------------------

// a-)Comparador de desigualdade a!==b 
// Exemplo:

function checarDesigualdade(a, b) {

    return `No comparador de desigualdade ${a}!==${b} √© ${a !== b}`
}
console.log(checarDesigualdade(1, 3));

// b-)Compare a igualdade entre a===b

function checarIgualdade(a, b) {
    return `No comparador de igualdade ${a}===${b} √© ${a === b}`
}
console.log(checarIgualdade(1, 3));

// c-)Fa√ßa uma fun√ß√£o chamada "verificaSeEMaior"

function verificaSeEMaior(a, b) {
    return `No comprador ${a} > ${b} √© ${a>b}`
}

console.log(verificaSeEMaior(321, 2156));


// Exerc√≠cio 2------------------------------------------------------------------------------------
//Escreva true or false para as compara√ß√µes abaixo:
// exemplo 1>2 = false
// a-) 1==='1'=
// b-) 1=='1'=
// c-) 'a'==='b'=
// d-) 'b'>'a'=
// e-) 0!==null=


// CONDICIONAIS

// Exerc√≠cio 3------------------------------------------------------------------------------------
/*
const cadastro = () => {

    let usuario = []
    
    let anoDeNascimento = Number(prompt("Digite seu ano de nascimento:"))
    
        if ((2022 - anoDeNascimento) <=17){
        alert ("Sua idade √© inferior √† 18 anos, voc√™ n√£o pode se cadastrar!")
    }else{
        let nomeDoUsuario = prompt("Digite seu nome completo")
        let senhaDoUsuario = prompt("Digite sua senha:")
        while (senhaDoUsuario.length < 6) {
            alert ("Sua senha precisa ter no m√≠nimo 6")
            senhaDoUsuario = prompt ("Digite sua senha:")
        }
        let nacionalidade = prompt("Digite sua nacionalidade:").toLowerCase()
        if ((nacionalidade != "brasileiro") && (nacionalidade != "brasileira")){
            alert ("Voc√™ n√£o pode se cadastrar")
        }
        usuario = [nomeDoUsuario, anoDeNascimento, senhaDoUsuario, nacionalidade]
        return usuario
    }

}
console.log(cadastro());
*/
// Exerc√≠cio 4-----------------------------------------------------------------------------------------------

/*const login = () => {
    const login = "labenu"
    //  Sua l√≥gica aqui
    let senhaDoUsuario = prompt("Digite sua senha:")
    if (senhaDoUsuario === login) {
        console.log("Usu√°rio logado")
    } else {
        console.log("Senha incorreta!")
    }

}

console.log(login());

// Exerc√≠cio 5----------------------------------------------------------------------------------------------------

const primeiraDose = () => {
    //  Sua l√≥gica aqui
let nomeDoUsuario2 = prompt("Digite seu nome: ")
let vacinaTomada = prompt("Digite qual vacina voc√™ tomou: CoronaVac, Astraz√™nica ou Pfizer.").toUpperCase()
let tempo = 0

switch (vacinaTomada) {
    case "CORONAVAC":
        tempo = 28
        break;
    case "ASTRAZ√äNICA":
        tempo = 90
    case "PFIZER":
        tempo = 90   
    default:
        tempo
        break;
}
if (vacinaTomada == "CORONAVAC") {
    data = "18/06/2022"
} else {
    data = "22/09/2022"
}

return `Ol√° ${nomeDoUsuario2}, a pr√≥xima data da vacina ${vacinaTomada}, √© daqui a ${tempo} dias.
Compare√ßa no posto na data ${data}.`
}
console.log(primeiraDose())

*/
// LOOP+CONDICIONAL

// Exerc√≠cio 6 -------------------------------------------------------------------------------------
/*- Exerc√≠cio 6 - Loop+Condicional -**Segunda dose**
    
    Escreva uma fun√ß√£o para validar a segunda dose de um usu√°rio, que receba o nomeDoUsu√°rio
     e mude o valor da propriedade `imuniza√ß√£o` para **‚Äúcompleta‚Äù** para isso vamos te fornecer
      uma lista de usu√°rios.
    
    ```jsx
    const usuarios = [
           { nome: "Artur", imunizacao: "incompleta" },
           { nome: "Barbara", imunizacao: "incompleta" },
           { nome: "Carlos", imunizacao: "incompleta" }
    ]
    ```
    
    üí°Dica:  para acessar os valores guardados em cada propriedade de um objeto use a nota√ß√£o do ponto chamando pelo nome da propriedade.
     **Ex:**  
    
    - objeto.nome // "B√°rbara"
    - objeto.imunizacao // "incompleta"*/

const segundaDose = (nomeDoUsuario) => {
    const usuarios = [
        { nome: "Artur", imunizacao: "incompleta" },
        { nome: "Barbara", imunizacao: "incompleta" },
        { nome: "Carlos", imunizacao: "incompleta" }
    ]
    //  Sua l√≥gica aqui



}


console.log(segundaDose("Barbara"));

// Exerc√≠cio 7 --------------------------------------------------------------------------------------

/*
- Exerc√≠cio 7 -  Loop+Condicional - **Aviso aos atrasados**
    
    As pessoas que tomaram a primeira dose da vacina, n√£o voltaram no postinho para a segunda
     dose e temos que enviar uma mensagem para elas no app.
    Escreva uma fun√ß√£o que **leia a lista de usu√°rios** e **verifique** se a imuniza√ß√£o 
    est√° completa ou n√£o e caso n√£o esteja completa,  **imprima no console** 
    uma mensagem avisando que ele deve voltar ao posto para tomar a segunda dose.
*/

const avisoAosAtrasados = () => {
    const usuarios = [
        { nome: "Artur", imunizacao: "incompleta" },
        { nome: "Barbara", imunizacao: "completa" },
        { nome: "Carlos", imunizacao: "incompleta" }
    ]
    for (let index = 0; index < usuarios.length; index++) {
        const element = usuarios[index];
        
    }
        if (usuarios[index]["imunizacao"]== "incompleto"){
        console.log (`Ol√°, ${nome}, sua imuniza√ß√£o est√° ${imunizacao}, favor, comparecer ao posto`)
        }
    }
    

avisoAosAtrasados()


// DESAFIO------------------------------------------------------------------------------------------
/*Modifique as fun√ß√µes dos exerc√≠cios 3 a 7 para que salvem as informa√ß√µes coletadas 
em um √∫nico objeto ‚Äúusu√°rios‚Äù e usem este objeto para exibir as mensagens e fazer as valida√ß√µes pedidas .

Para isso ser√° usado o array de objetos - usuarios abaixo:*/

const usuarios = [
    {
        nome: "Artur",
        ano: 2000,
        nacionalidae: "brasileiro",
        senha: "123456",
        vacina: "pfizer",
        imunizacao: "incompleta"
    },
    {
        nome: "B√°rbara",
        ano: 1984,
        nacionalidae: "brasileira",
        senha: "labenu",
        vacina: "astrazenica",
        imunizacao: "completa"
    },
    {
        nome: "Carlos",
        ano: 2000,
        nacionalidae: "brasileiro",
        senha: "123456",
        vacina: "coronavac",
        imunizacao: "incompleta"
    }

]

const cadastroDesafio = () => {
    //  Sua l√≥gica aqui
}


/*No desafio, ao inv√©s de cadastrar o usu√°rio enviando para o array, voc√™ vai adicionar 
as informa√ß√µes recebidas pelo prompt a um objeto e ent√£o adicion√°-lo ao array usuarios.
console.log(cadastroDesafio());*/

const loginDesafio = () => {
    //  Sua l√≥gica aqui
}
console.log(loginDesafio());

/*Neste exerc√≠cio voc√™ deve adicionar ao usu√°rio cadastrado
 da lista usuarios as informa√ß√µes vacina e imuniza√ß√£o. 
 O par√¢metro imuniza√ß√£o deve receber um valor padr√£o "incompleta" 
 al√©m de devolver a mensagem anteriormente programada. */
 
const primeiraDoseDesafio = () => {
//  Sua l√≥gica aqui
}
console.log(primeiraDoseDesafio())

/*Neste exerc√≠cio voc√™ deve receber um nome de usu√°rio por par√¢metro, verificar se este
 nome existe na lista usuarios e  caso exista mudar o valor do par√¢metro imuniza√ß√£o para "completa"*/

const segundaDoseDesafio = (nomeDoUsuario) => {
    //  Sua l√≥gica aqui
}
console.log(segundaDoseDesafio("ALGUM NOME AQUI"));

/*_________________________________________________________________

Reformule a fun√ß√£o para que ela **retorne** a mesma mensagem ao final,
 adicionando qual das vacinas o usu√°rio deve fazer o refor√ßo.

Imprima a mensagem no console.
*/

const avisoAosAtrasadosDesafio = () => {
    //  Sua l√≥gica aqui
}
console.log(avisoAosAtrasadosDesafio());